--- twin-0.5.1/server/HW/hw_tty_linux/kbd_raw1.h.orig	2003-05-31 09:52:10.000000000 +0200
+++ twin-0.5.1/server/HW/hw_tty_linux/kbd_raw1.h	2004-01-04 12:47:50.734975424 +0100
@@ -40,7 +40,6 @@
 #include <linux/kd.h>
 #include <linux/keyboard.h>
 #include <linux/vt.h>
-#include <linux/bitops.h>
 
 
 #define SIZE(array)		(sizeof(array)/sizeof(array[0]))
@@ -74,7 +73,50 @@
 
 #define U(x) ((x) ^ 0xf000)
 
+/*
+ * first three routines from <asm-generic/bitops.h> in Linux sources
+ * (with cli/sti removed)
+ * C language equivalents written by Theodore Ts'o, 9/26/92
+ */
+
+extern __inline__ int set_bit(int nr,long * addr)
+{
+	int	mask, retval;
+
+	addr += nr >> 5;
+	mask = 1 << (nr & 0x1f);
+	retval = (mask & *addr) != 0;
+	*addr |= mask;
+	return retval;
+}
+
+static __inline__ int clear_bit(int nr, long * addr)
+{
+	int	mask, retval;
 
+	addr += nr >> 5;
+	mask = 1 << (nr & 0x1f);
+	retval = (mask & *addr) != 0;
+	*addr &= ~mask;
+	return retval;
+}
+
+static __inline__ int test_bit(int nr, long * addr)
+{
+	int	mask;
+
+	addr += nr >> 5;
+	mask = 1 << (nr & 0x1f);
+	return ((mask & *addr) != 0);
+}
+
+/* non-atomic version */
+static __inline__ int test_and_set_bit(int nr, long * addr)
+{
+	int old = test_bit(nr, addr);
+	set_bit(nr, addr);
+	return old;
+}
 
 /* only one display at time can be in raw-keyboard mode... results in much simpler code */
 
